/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const dropdown = document.querySelector(\".header__dropdown\");\n  const button = document.querySelector(\".header__button\");\n  const dropdownList = document.querySelector(\".header__dropdown-list\");\n\n  // Открытие/закрытие выпадающего списка при клике на кнопку\n  button.addEventListener(\"click\", function (event) {\n    event.stopPropagation(); // Останавливает распространение события на родительские элементы\n    dropdown.classList.toggle(\"active\"); // Переключаем класс для отображения/скрытия списка\n  });\n\n  // Закрытие выпадающего списка при клике вне кнопки или списка\n  document.addEventListener(\"click\", function (event) {\n    if (!dropdown.contains(event.target)) {\n      dropdown.classList.remove(\"active\"); // Убирает активный класс, скрывая список\n    }\n  });\n\n  // Обработка клика на пункт списка\n  const listItems = dropdownList.querySelectorAll(\"a\"); // Выбираем все элементы списка\n  listItems.forEach((item) => {\n    item.addEventListener(\"click\", function (event) {\n      event.preventDefault(); // Останавливаем переход по ссылке\n\n      const selectedLang = item.dataset.lang; // Получаем язык из атрибута data-lang\n      button.textContent = selectedLang; // Меняем текст кнопки\n\n      dropdown.classList.remove(\"active\"); // Закрываем выпадающий список\n    });\n  });\n});\n\n\n//# sourceURL=webpack://gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;